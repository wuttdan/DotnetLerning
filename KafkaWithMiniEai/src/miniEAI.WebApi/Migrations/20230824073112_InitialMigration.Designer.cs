// <auto-generated />
using System;
using Infrastructure.Persistences;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace miniEAI.WebApi.Migrations
{
    [DbContext(typeof(MiniEaiDbContext))]
    [Migration("20230824073112_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Thai_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("HEADERID_SEQ")
                .HasMin(1L);

            modelBuilder.HasSequence("REFID_SEQ")
                .HasMin(1L);

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvAuthorizationDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("EndDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("END_DATE");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<long>("HeaderId")
                        .HasColumnType("bigint")
                        .HasColumnName("HEADER_ID");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("LocationCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LOCATION_CODE");

                    b.Property<string>("LocationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LOCATION_NAME");

                    b.Property<string>("Period")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PERIOD");

                    b.Property<string>("Role")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ROLE");

                    b.Property<string>("RolePast")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ROLE_PAST");

                    b.Property<string>("StartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("START_DATE");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("FBB_TBL_EVAUTHORIZATION_DETAIL", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvAuthorizationHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AcimAppname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ACIM_APPNAME");

                    b.Property<string>("AcimClientId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ACIM_CLIENT_ID");

                    b.Property<string>("AcimVersion")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ACIM_VERSION");

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACTION");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("ServerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_EVAUTHORIZATION_HEADER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvAutoApproveHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("ServerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Timestamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TIMESTAMP");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_EVAUTOAPPROVE_HEADER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvCustomerInfoDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("FieldName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIELD_NAME");

                    b.Property<string>("FieldValue")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("FIELD_VALUE");

                    b.Property<long>("HeaderId")
                        .HasColumnType("bigint")
                        .HasColumnName("HEADER_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<int?>("TypeGroup")
                        .HasColumnType("int")
                        .HasColumnName("TYPE_GROUP");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("FBB_TBL_EVCUSTOMERINFO_DETAIL", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvCustomerInfoHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("InternetId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INTERNET_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORDER_NO");

                    b.Property<string>("ServerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_EVCUSTOMERINFO_HEADER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvJobApproveDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ApproveTime")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("APPROVE_TIME");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<long>("HeaderId")
                        .HasColumnType("bigint")
                        .HasColumnName("HEADER_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("FBB_TBL_EVJOBAPPROVE_DETAIL", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvJobApproveHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("InternetId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INTERNET_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORDER_NO");

                    b.Property<string>("ServerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_EVJOBAPPROVE_HEADER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvJobIncompleteDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AttributeDesc")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("ATTRIBUTE_DESC");

                    b.Property<string>("AttributeValue")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("ATTRIBUTE_VALUE");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<long>("HeaderId")
                        .HasColumnType("bigint")
                        .HasColumnName("HEADER_ID");

                    b.Property<string>("IncompleteTime")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("INCOMPLETE_TIME");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("Reason")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("REASON");

                    b.Property<string>("Remark")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("REMARK");

                    b.Property<string>("SubReason")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("SUB_REASON");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("FBB_TBL_EVJOBINCOMPLETE_DETAIL", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvJobIncompleteHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("InternetId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INTERNET_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORDER_NO");

                    b.Property<string>("ServerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_EVJOBINCOMPLETE_HEADER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvMicrositeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Cid")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CID");

                    b.Property<string>("Complete")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("COMPLETE");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("District")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("DISTRICT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Firstname")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("FIRSTNAME");

                    b.Property<long>("HeaderId")
                        .HasColumnType("bigint")
                        .HasColumnName("HEADER_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("Lastname")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("LASTNAME");

                    b.Property<string>("MediaStreaming")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("MEDIA_STREAMING");

                    b.Property<string>("NumberOfUser")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NUMBER_OF_USER");

                    b.Property<string>("Package")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PACKAGE");

                    b.Property<string>("PackageCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PACKAGE_CODE");

                    b.Property<string>("PlayboxAddon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PLAYBOX_ADDON");

                    b.Property<string>("PlayboxBundle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PLAYBOX_BUNDLE");

                    b.Property<string>("Price")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PRICE");

                    b.Property<string>("Province")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("PROVINCE");

                    b.Property<string>("Residential")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RESIDENTIAL");

                    b.Property<string>("RouterAddon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ROUTER_ADDON");

                    b.Property<string>("RouterBundle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ROUTER_BUNDLE");

                    b.Property<string>("Segment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEGMENT");

                    b.Property<string>("Speed")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SPEED");

                    b.Property<string>("Subdistrict")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SUBDISTRICT");

                    b.Property<string>("Telephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TELEPHONE");

                    b.Property<string>("TypeOfUser")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TYPE_OF_USER");

                    b.Property<string>("User")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("USER");

                    b.Property<string>("UserJourney")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("USER_JOURNEY");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ZIPCODE");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("FBB_TBL_EVMICROSITE_DETAIL", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvMicrositeHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORDER_NO");

                    b.Property<string>("ServerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_EVMICROSITE_HEADER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvMicrositeUpdDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("DateAction")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DATE_ACTION");

                    b.Property<long>("HeaderId")
                        .HasColumnType("bigint")
                        .HasColumnName("HEADER_ID");

                    b.Property<string>("IsContactCustomer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IS_CONTACT_CUSTOMER");

                    b.Property<string>("IsInCoverage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IS_IN_COVERAGE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("OrderChannel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORDER_CHANNEL");

                    b.Property<string>("OrderPreRegister")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ORDER_PRE_REGISTER");

                    b.Property<string>("RemarkNote")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)")
                        .HasColumnName("REMARK_NOTE");

                    b.Property<string>("StatusOrder")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS_ORDER");

                    b.Property<string>("UserAction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("USER_ACTION");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("FBB_TBL_EVMICROSITEUPD_DETAIL", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvMicrositeUpdHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORDER_NO");

                    b.Property<string>("ServerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_EVMICROSITEUPD_HEADER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COMPANY_ID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("COMPANY_NAME");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("LocationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LOCATION_CODE");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("ORDER_ID");

                    b.Property<long?>("StaffId")
                        .HasColumnType("bigint")
                        .HasColumnName("STAFF_ID");

                    b.Property<string>("StorageLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STORAGE_LOCATION");

                    b.Property<string>("VendorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VENDOR_CODE");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("FBB_TBL_EVNOTIFYAPPOINTMENT_COMPANIES", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentCrm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AUTHOR");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("ORDER_ID");

                    b.Property<string>("RemarkDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REMARK_DATE");

                    b.Property<string>("SubcontractRemarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SUBCONTRACT_REMARKS");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("FBB_TBL_EVNOTIFYAPPOINTMENT_CRMS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Data")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("DATA");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("ORDER_ID");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("FBB_TBL_EVNOTIFYAPPOINTMENT_FEES", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("FibrenetId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIBRENET_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("MsgSeqId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MSG_SEQ_ID");

                    b.Property<string>("OrderType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORDER_TYPE");

                    b.Property<string>("ServerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TYPE");

                    b.Property<string>("TypeOperDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TYPE_OPER_DATE");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_EVNOTIFYAPPOINTMENT_HEADER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOntop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Data")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("DATA");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("ORDER_ID");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("FBB_TBL_EVNOTIFYAPPOINTMENT_ONTOPS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AcceptDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCEPT_DATE");

                    b.Property<string>("AccessMode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCESS_MODE");

                    b.Property<string>("AppointmentDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("APPOINTMENT_DATE");

                    b.Property<string>("AppointmentTimeslot")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("APPOINTMENT_TIMESLOT");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BRAND");

                    b.Property<string>("CommitDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COMMIT_DATE");

                    b.Property<string>("ComplaintDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COMPLAINT_DESCRIPTION");

                    b.Property<string>("ComplaintTitle")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("COMPLAINT_TITLE");

                    b.Property<string>("ContactMobilePhone1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTACT_MOBILE_PHONE1");

                    b.Property<string>("ContactMobilePhone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTACT_MOBILE_PHONE2");

                    b.Property<string>("ContactMobilePhone3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTACT_MOBILE_PHONE3");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CONTACT_PERSON_NAME");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("CustomerComplaintMobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CUSTOMER_COMPLAINT_MOBILE");

                    b.Property<string>("CustomerComplaintName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CUSTOMER_COMPLAINT_NAME");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CUSTOMER_NAME");

                    b.Property<string>("CustomerOrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CUSTOMER_ORDER_NO");

                    b.Property<string>("DetailsForResolved")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DETAILS_FOR_RESOLVED");

                    b.Property<string>("DownlinkRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DOWNLINK_RATE");

                    b.Property<string>("EventflowFlag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EVENTFLOW_FLAG");

                    b.Property<string>("FbssOrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FBSS_ORDER_NO");

                    b.Property<string>("FibrenetId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIBRENET_ID");

                    b.Property<long>("HeaderId")
                        .HasColumnType("bigint")
                        .HasColumnName("HEADER_ID");

                    b.Property<string>("InstallationAddress")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("INSTALLATION_ADDRESS");

                    b.Property<string>("InstallationLatitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INSTALLATION_LATITUDE");

                    b.Property<string>("InstallationLongitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INSTALLATION_LONGITUDE");

                    b.Property<string>("JobPriority")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JOB_PRIORITY");

                    b.Property<string>("JobState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JOB_STATE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("NocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOC_NUMBER");

                    b.Property<string>("NocRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOC_REMARK");

                    b.Property<string>("OntopPack")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("ONTOP_PACK");

                    b.Property<string>("OrderType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ORDER_TYPE");

                    b.Property<string>("PlayboxContent")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("PLAYBOX_CONTENT");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PRODUCT_NAME");

                    b.Property<string>("ReplaceOntFlag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("REPLACE_ONT_FLAG");

                    b.Property<string>("ReplaceRouterFlag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("REPLACE_ROUTER_FLAG");

                    b.Property<string>("RouterNum")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ROUTER_NUM");

                    b.Property<string>("Service")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERVICE");

                    b.Property<string>("ServiceLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERVICE_LEVEL");

                    b.Property<string>("ServicePack")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("SERVICE_PACK");

                    b.Property<string>("SiebelRequestNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SIEBEL_REQUEST_NO");

                    b.Property<string>("TaskOrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TASK_ORDER_NO");

                    b.Property<string>("TotalFee")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("TOTAL_FEE");

                    b.Property<string>("TroubleSymptom")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("TROUBLE_SYMPTOM");

                    b.Property<string>("TroubleTicketNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TROUBLE_TICKET_NO");

                    b.Property<string>("UplinkRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UPLINK_RATE");

                    b.Property<string>("VoipNumber1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VOIP_NUMBER1");

                    b.Property<string>("VoipNumber2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VOIP_NUMBER2");

                    b.Property<string>("VoipPassword1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VOIP_PASSWORD1");

                    b.Property<string>("VoipPassword2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VOIP_PASSWORD2");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("FBB_TBL_EVNOTIFYAPPOINTMENT_ORDER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentResource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActivationId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACTIVATION_ID");

                    b.Property<string>("CpeInstallation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CPE_INSTALLATION");

                    b.Property<string>("CpeModel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CPE_MODEL");

                    b.Property<string>("CpeSn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CPE_SN");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Cvlan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CVLAN");

                    b.Property<string>("DeviceModel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DEVICE_MODEL");

                    b.Property<string>("DownlinkRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DOWNLINK_RATE");

                    b.Property<string>("DropWireDistance")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DROP_WIRE_DISTANCE");

                    b.Property<string>("DslamManufacturer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DSLAM_MANUFACTURER");

                    b.Property<string>("DslamPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DSLAM_PORT");

                    b.Property<string>("EndPointLatitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("END_POINT_LATITUDE");

                    b.Property<string>("EndPointLongitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("END_POINT_LONGITUDE");

                    b.Property<string>("ExistingDropWireId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EXISTING_DROP_WIRE_ID");

                    b.Property<string>("Gemport")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("GEMPORT");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP_ADDRESS");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("MdfOutPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MDF_OUT_PORT");

                    b.Property<string>("NewDropWireId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NEW_DROP_WIRE_ID");

                    b.Property<string>("OdfFiberCore")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ODF_FIBER_CORE");

                    b.Property<string>("OdfIn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ODF_IN");

                    b.Property<string>("OdfOut")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ODF_OUT");

                    b.Property<string>("OltManufacturer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OLT_MANUFACTURER");

                    b.Property<string>("OltName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OLT_NAME");

                    b.Property<string>("OltPonPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OLT_PON_PORT");

                    b.Property<string>("Onu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ONU");

                    b.Property<string>("OnuId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ONU_ID");

                    b.Property<string>("OnuModel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ONU_MODEL");

                    b.Property<string>("OnuUplinkPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ONU_UPLINK_PORT");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("ORDER_ID");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("ReuseFlag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("REUSE_FLAG");

                    b.Property<string>("Service")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERVICE");

                    b.Property<string>("Sp1FiberCore")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SP1_FIBER_CORE");

                    b.Property<string>("Sp1InPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SP1_IN_PORT");

                    b.Property<string>("Sp1Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP1_LATITUDE");

                    b.Property<string>("Sp1Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP1_LONGITUDE");

                    b.Property<string>("Sp1OutPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SP1_OUT_PORT");

                    b.Property<string>("Sp1RunningState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP1_RUNNING_STATE");

                    b.Property<string>("Sp2Distance")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP2_DISTANCE");

                    b.Property<string>("Sp2InPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SP2_IN_PORT");

                    b.Property<string>("Sp2Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP2_LATITUDE");

                    b.Property<string>("Sp2Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP2_LONGITUDE");

                    b.Property<string>("Sp2OutPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SP2_OUT_PORT");

                    b.Property<string>("Sp2RunningState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP2_RUNNING_STATE");

                    b.Property<string>("SplitterDistance")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SPLITTER_DISTANCE");

                    b.Property<string>("SplitterNamePrimary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SPLITTER_NAME_PRIMARY");

                    b.Property<string>("SplitterPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SPLITTER_PORT");

                    b.Property<string>("StandardAddressName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("STANDARD_ADDRESS_NAME");

                    b.Property<string>("Svlan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SVLAN");

                    b.Property<string>("Tcont")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TCONT");

                    b.Property<string>("UplinkRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UPLINK_RATE");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("FBB_TBL_EVNOTIFYAPPOINTMENT_RESOURCE", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentStaff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("ORDER_ID");

                    b.Property<string>("StaffCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STAFF_CODE");

                    b.Property<string>("StaffEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("STAFF_EMAIL");

                    b.Property<string>("StaffEndDayWorking")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STAFF_END_DAY_WORKING");

                    b.Property<string>("StaffFirstDayWorking")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STAFF_FIRST_DAY_WORKING");

                    b.Property<string>("StaffLatitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STAFF_LATITUDE");

                    b.Property<string>("StaffLongitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STAFF_LONGITUDE");

                    b.Property<string>("StaffName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("STAFF_NAME");

                    b.Property<string>("StaffPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("STAFF_PHONE");

                    b.Property<string>("StaffProfilePictureFilename")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("STAFF_PROFILE_PICTURE_FILENAME");

                    b.Property<string>("StaffRole")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("STAFF_ROLE");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("FBB_TBL_EVNOTIFYAPPOINTMENT_STAFFS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentTeam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("COMPANY_ID");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("LocationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LOCATION_CODE");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("ORDER_ID");

                    b.Property<string>("ShipTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SHIP_TO");

                    b.Property<string>("StorageLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STORAGE_LOCATION");

                    b.Property<string>("TeamId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TEAM_ID");

                    b.Property<string>("TeamName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TEAM_NAME");

                    b.Property<string>("TeamService")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("TEAM_SERVICE");

                    b.Property<string>("VendorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VENDOR_CODE");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("FBB_TBL_EVNOTIFYAPPOINTMENT_TEAMS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentWfm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AUTHOR");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("ORDER_ID");

                    b.Property<string>("RemarkDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REMARK_DATE");

                    b.Property<string>("SubcontractRemarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SUBCONTRACT_REMARKS");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("FBB_TBL_EVNOTIFYAPPOINTMENT_WFMS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvSendChecklateDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<long>("HeaderId")
                        .HasColumnType("bigint")
                        .HasColumnName("HEADER_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("LateDuration")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LATE_DURATION");

                    b.Property<string>("MnAppointmentDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MN_APPOINTMENT_DATE");

                    b.Property<string>("MnCheckinLateReason")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("MN_CHECKIN_LATE_REASON");

                    b.Property<string>("MnCheckinLateTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MN_CHECKIN_LATE_TIME");

                    b.Property<string>("MnCreateDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MN_CREATE_DATE");

                    b.Property<string>("MnCreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MN_CREATED_BY");

                    b.Property<string>("MnCurrentLatitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MN_CURRENT_LATITUDE");

                    b.Property<string>("MnCurrentLongitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MN_CURRENT_LONGITUDE");

                    b.Property<string>("MnCustomerAddress")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("MN_CUSTOMER_ADDRESS");

                    b.Property<string>("MnCustomerContact1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MN_CUSTOMER_CONTACT_1");

                    b.Property<string>("MnCustomerContact2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MN_CUSTOMER_CONTACT_2");

                    b.Property<string>("MnCustomerContact3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MN_CUSTOMER_CONTACT_3");

                    b.Property<string>("MnCustomerLatitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MN_CUSTOMER_LATITUDE");

                    b.Property<string>("MnCustomerLongitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MN_CUSTOMER_LONGITUDE");

                    b.Property<string>("MnCustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MN_CUSTOMER_NAME");

                    b.Property<string>("MnPackage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("MN_PACKAGE");

                    b.Property<string>("MnProductName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MN_PRODUCT_NAME");

                    b.Property<string>("MnRegion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MN_REGION");

                    b.Property<string>("MnRemarks")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("MN_REMARKS");

                    b.Property<string>("MnSlot")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MN_SLOT");

                    b.Property<string>("MnStaffCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MN_STAFF_CODE");

                    b.Property<string>("MnStaffName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MN_STAFF_NAME");

                    b.Property<string>("MnStaffPhone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MN_STAFF_PHONE");

                    b.Property<string>("MnSubcontractTeam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MN_SUBCONTRACT_TEAM");

                    b.Property<string>("Refid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REFID");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("FBB_TBL_EVSENDCHECKLATE_DETAIL", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvSendChecklateHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("InternetId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INTERNET_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORDER_NO");

                    b.Property<string>("OrderType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ORDER_TYPE");

                    b.Property<string>("ServerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_EVSENDCHECKLATE_HEADER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblExceptionError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text")
                        .HasColumnName("ERROR_MESSAGE");

                    b.Property<string>("Fucntion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FUCNTION");

                    b.Property<string>("Service")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERVICE");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TransactionId" }, "NonClusteredIndex-20210409-175036");

                    b.ToTable("FBB_TBL_EXCEPTION_ERROR", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblListOfValue", b =>
                {
                    b.Property<string>("ActiveFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ACTIVE_FLAG");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EXTERNAL_ID");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("LovName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LOV_NAME");

                    b.Property<string>("LovValue1")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("LOV_VALUE1");

                    b.Property<string>("LovValue2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LOV_VALUE2");

                    b.Property<string>("LovValue3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LOV_VALUE3");

                    b.ToTable("FBB_TBL_LIST_OF_VALUE", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblLogging", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime")
                        .HasColumnName("REQUEST_DATE");

                    b.Property<string>("RequestEvent")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("REQUEST_EVENT");

                    b.Property<string>("RequestMessage")
                        .HasColumnType("text")
                        .HasColumnName("REQUEST_MESSAGE");

                    b.Property<string>("RequestMethod")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("REQUEST_METHOD");

                    b.Property<string>("RequestPath")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("REQUEST_PATH");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_LOGGING", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblMappingExternal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("EndpointName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ENDPOINT_NAME");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EXTERNAL_ID");

                    b.Property<string>("IsOnline")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("IS_ONLINE")
                        .IsFixedLength();

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<int>("MappingWo")
                        .HasColumnType("int")
                        .HasColumnName("MAPPING_WO");

                    b.Property<int?>("RequestTimeout")
                        .HasColumnType("int")
                        .HasColumnName("REQUEST_TIMEOUT");

                    b.Property<int?>("RetryCount")
                        .HasColumnType("int")
                        .HasColumnName("RETRY_COUNT");

                    b.Property<int?>("SleepTimes")
                        .HasColumnType("int")
                        .HasColumnName("SLEEP_TIMES");

                    b.Property<string>("Typews")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TYPEWS");

                    b.Property<string>("UrlEndpoint")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("URL_ENDPOINT");

                    b.HasKey("Id");

                    b.HasIndex("MappingWo");

                    b.ToTable("FBB_TBL_MAPPING_EXTERNAL", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblMappingId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppSource")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("APP_SOURCE");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("ResponseTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESPONSE_TIME");

                    b.Property<string>("TypeEvent")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TYPE_EVENT");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_MAPPING_ID", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblMappingParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("COLUMN_NAME");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DEFAULT_VALUE");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EXTERNAL_ID");

                    b.Property<string>("FieldNameValue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FIELD_NAME_VALUE");

                    b.Property<string>("FormatValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FORMAT_VALUE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<int>("MappingWo")
                        .HasColumnType("int")
                        .HasColumnName("MAPPING_WO");

                    b.Property<string>("ParamXmlName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PARAM_XML_NAME");

                    b.Property<int?>("SeqNum")
                        .HasColumnType("int")
                        .HasColumnName("SEQ_NUM");

                    b.Property<string>("SourceTable")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SOURCE_TABLE");

                    b.HasKey("Id");

                    b.HasIndex("MappingWo");

                    b.ToTable("FBB_TBL_MAPPING_PARAMETER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblMappingValidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActiveFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("ACTIVE_FLAG")
                        .IsFixedLength();

                    b.Property<string>("AppSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("APP_SOURCE");

                    b.Property<string>("ConstraintValidate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONSTRAINT_VALIDATE");

                    b.Property<int?>("MappingId")
                        .HasColumnType("int")
                        .HasColumnName("MAPPING_ID");

                    b.Property<string>("ParameterXml")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("PARAMETER_XML");

                    b.Property<string>("TypeEvent")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TYPE_EVENT");

                    b.HasKey("Id");

                    b.HasIndex("MappingId");

                    b.ToTable("FBB_TBL_MAPPING_VALIDATE", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblMappingWo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DESTINATION");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EXTERNAL_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<int>("MappingId")
                        .HasColumnType("int")
                        .HasColumnName("MAPPING_ID");

                    b.Property<int?>("SeqNum")
                        .HasColumnType("int")
                        .HasColumnName("SEQ_NUM");

                    b.Property<string>("TypeExternal")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TYPE_EXTERNAL");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_MAPPING_WO", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DESTINATION");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EXTERNAL_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORDER_NO");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime")
                        .HasColumnName("REQUEST_DATE");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("RESPONSE_DATE");

                    b.Property<int>("RetryNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RETRY_NO")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TRANSACTION_ID");

                    b.HasKey("Id");

                    b.ToTable("FBB_TBL_WO", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoAttribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("NAME");

                    b.Property<int?>("TypeGroup")
                        .HasColumnType("int")
                        .HasColumnName("TYPE_GROUP");

                    b.Property<string>("Value")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("VALUE");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_ATTRIBUTE", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoBlame", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("FieldPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FIELD_PATH");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("ValueAfter")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VALUE_AFTER");

                    b.Property<string>("ValueBefore")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VALUE_BEFORE");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_BLAME", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoErrorMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("ErrorCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ERROR_CODE");

                    b.Property<string>("ErrorDesc")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("ERROR_DESC");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("Remark")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("REMARK");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_ERROR_MESSAGE", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COMPANY_ID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("COMPANY_NAME");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("LocationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LOCATION_CODE");

                    b.Property<long?>("StaffId")
                        .HasColumnType("bigint")
                        .HasColumnName("STAFF_ID");

                    b.Property<string>("StorageLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STORAGE_LOCATION");

                    b.Property<string>("VendorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VENDOR_CODE");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_COMPANIES", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaCrm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AUTHOR");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("RemarkDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REMARK_DATE");

                    b.Property<string>("SubcontractRemarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SUBCONTRACT_REMARKS");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_CRMS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaFee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Data")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("DATA");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_FEES", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("FibrenetId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIBRENET_ID");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("MsgSeqId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MSG_SEQ_ID");

                    b.Property<string>("OrderType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORDER_TYPE");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TYPE");

                    b.Property<string>("TypeOperDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TYPE_OPER_DATE");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_HEADER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaInstallOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccessMode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCESS_MODE");

                    b.Property<string>("AppointmentDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("APPOINTMENT_DATE");

                    b.Property<string>("AppointmentTimeslot")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("APPOINTMENT_TIMESLOT");

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AREA");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BRAND");

                    b.Property<string>("BuildingName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BUILDING_NAME");

                    b.Property<string>("ContactMobilePhone1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTACT_MOBILE_PHONE1");

                    b.Property<string>("ContactMobilePhone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTACT_MOBILE_PHONE2");

                    b.Property<string>("ContactMobilePhone3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTACT_MOBILE_PHONE3");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CONTACT_PERSON_NAME");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("CsNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CS_NOTE");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CUSTOMER_NAME");

                    b.Property<string>("CustomerOrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CUSTOMER_ORDER_NO");

                    b.Property<string>("EventflowFlag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EVENTFLOW_FLAG");

                    b.Property<string>("FbssOrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FBSS_ORDER_NO");

                    b.Property<string>("FibrenetId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIBRENET_ID");

                    b.Property<string>("InstallationAddress")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("INSTALLATION_ADDRESS");

                    b.Property<string>("InstallationLatitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INSTALLATION_LATITUDE");

                    b.Property<string>("InstallationLongitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INSTALLATION_LONGITUDE");

                    b.Property<string>("JobPriority")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JOB_PRIORITY");

                    b.Property<string>("JobState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JOB_STATE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("OntopPack")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("ONTOP_PACK");

                    b.Property<string>("OrderType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ORDER_TYPE");

                    b.Property<string>("PlayboxContent")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("PLAYBOX_CONTENT");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PRODUCT_NAME");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REGION");

                    b.Property<string>("ReplaceOntFlag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("REPLACE_ONT_FLAG");

                    b.Property<string>("ReplaceRouterFlag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("REPLACE_ROUTER_FLAG");

                    b.Property<string>("RouterNum")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ROUTER_NUM");

                    b.Property<string>("ServiceLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERVICE_LEVEL");

                    b.Property<string>("ServicePack")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("SERVICE_PACK");

                    b.Property<string>("TaskOrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TASK_ORDER_NO");

                    b.Property<string>("TotalFee")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("TOTAL_FEE");

                    b.Property<string>("VoipNumber1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VOIP_NUMBER1");

                    b.Property<string>("VoipNumber2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VOIP_NUMBER2");

                    b.Property<string>("VoipPassword1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VOIP_PASSWORD1");

                    b.Property<string>("VoipPassword2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VOIP_PASSWORD2");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_INSTALL_ORDER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaMaOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AcceptDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCEPT_DATE");

                    b.Property<string>("AccessMode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCESS_MODE");

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("AppointmentDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("APPOINTMENT_DATE");

                    b.Property<string>("AppointmentTimeslot")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("APPOINTMENT_TIMESLOT");

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AREA");

                    b.Property<string>("BuildingName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BUILDING_NAME");

                    b.Property<string>("CommitDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COMMIT_DATE");

                    b.Property<string>("ComplaintDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COMPLAINT_DESCRIPTION");

                    b.Property<string>("ComplaintTitle")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("COMPLAINT_TITLE");

                    b.Property<string>("ContactMobilePhone1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTACT_MOBILE_PHONE1");

                    b.Property<string>("ContactMobilePhone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTACT_MOBILE_PHONE2");

                    b.Property<string>("ContactMobilePhone3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CONTACT_MOBILE_PHONE3");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CONTACT_PERSON_NAME");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("CsNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CS_NOTE");

                    b.Property<string>("CustomerComplaintMobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CUSTOMER_COMPLAINT_MOBILE");

                    b.Property<string>("CustomerComplaintName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CUSTOMER_COMPLAINT_NAME");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CUSTOMER_NAME");

                    b.Property<string>("DetailsForResolved")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DETAILS_FOR_RESOLVED");

                    b.Property<string>("DownlinkRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DOWNLINK_RATE");

                    b.Property<string>("FibrenetId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIBRENET_ID");

                    b.Property<string>("InstallationLatitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INSTALLATION_LATITUDE");

                    b.Property<string>("InstallationLongitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("INSTALLATION_LONGITUDE");

                    b.Property<string>("JobPriority")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("JOB_PRIORITY");

                    b.Property<string>("JobState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JOB_STATE");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("NocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOC_NUMBER");

                    b.Property<string>("NocRemark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOC_REMARK");

                    b.Property<string>("OntopPack")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("ONTOP_PACK");

                    b.Property<string>("PlayboxContent")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("PLAYBOX_CONTENT");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PRODUCT_NAME");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REGION");

                    b.Property<string>("Service")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERVICE");

                    b.Property<string>("ServiceLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERVICE_LEVEL");

                    b.Property<string>("ServicePack")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("SERVICE_PACK");

                    b.Property<string>("SiebelRequestNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SIEBEL_REQUEST_NO");

                    b.Property<string>("TaskOrderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TASK_ORDER_NO");

                    b.Property<string>("TroubleSymptom")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("TROUBLE_SYMPTOM");

                    b.Property<string>("TroubleTicketNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TROUBLE_TICKET_NO");

                    b.Property<string>("UplinkRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UPLINK_RATE");

                    b.Property<long>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_MA_ORDER", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaOntop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Data")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("DATA");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_ONTOPS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaResource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActivationId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACTIVATION_ID");

                    b.Property<string>("CpeInstallation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CPE_INSTALLATION");

                    b.Property<string>("CpeModel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CPE_MODEL");

                    b.Property<string>("CpeSn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CPE_SN");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Cvlan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CVLAN");

                    b.Property<string>("DeviceModel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DEVICE_MODEL");

                    b.Property<string>("DownlinkRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DOWNLINK_RATE");

                    b.Property<string>("DropWireDistance")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DROP_WIRE_DISTANCE");

                    b.Property<string>("DslamManufacturer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DSLAM_MANUFACTURER");

                    b.Property<string>("DslamPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DSLAM_PORT");

                    b.Property<string>("EndPointLatitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("END_POINT_LATITUDE");

                    b.Property<string>("EndPointLongitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("END_POINT_LONGITUDE");

                    b.Property<string>("ExistingDropWireId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EXISTING_DROP_WIRE_ID");

                    b.Property<string>("Gemport")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("GEMPORT");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP_ADDRESS");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("MdfOutPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MDF_OUT_PORT");

                    b.Property<string>("NewDropWireId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NEW_DROP_WIRE_ID");

                    b.Property<string>("OdfFiberCore")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ODF_FIBER_CORE");

                    b.Property<string>("OdfIn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ODF_IN");

                    b.Property<string>("OdfOut")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ODF_OUT");

                    b.Property<string>("OltManufacturer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OLT_MANUFACTURER");

                    b.Property<string>("OltName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OLT_NAME");

                    b.Property<string>("OltPonPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OLT_PON_PORT");

                    b.Property<string>("Onu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ONU");

                    b.Property<string>("OnuId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ONU_ID");

                    b.Property<string>("OnuModel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ONU_MODEL");

                    b.Property<string>("OnuUplinkPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ONU_UPLINK_PORT");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("ReuseFlag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("REUSE_FLAG");

                    b.Property<string>("Service")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERVICE");

                    b.Property<string>("Sp1FiberCore")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SP1_FIBER_CORE");

                    b.Property<string>("Sp1InPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SP1_IN_PORT");

                    b.Property<string>("Sp1Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP1_LATITUDE");

                    b.Property<string>("Sp1Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP1_LONGITUDE");

                    b.Property<string>("Sp1OutPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SP1_OUT_PORT");

                    b.Property<string>("Sp1RunningState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP1_RUNNING_STATE");

                    b.Property<string>("Sp2Distance")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP2_DISTANCE");

                    b.Property<string>("Sp2InPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SP2_IN_PORT");

                    b.Property<string>("Sp2Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP2_LATITUDE");

                    b.Property<string>("Sp2Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP2_LONGITUDE");

                    b.Property<string>("Sp2OutPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SP2_OUT_PORT");

                    b.Property<string>("Sp2RunningState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SP2_RUNNING_STATE");

                    b.Property<string>("SplitterDistance")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SPLITTER_DISTANCE");

                    b.Property<string>("SplitterNamePrimary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SPLITTER_NAME_PRIMARY");

                    b.Property<string>("SplitterPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SPLITTER_PORT");

                    b.Property<string>("StandardAddressName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("STANDARD_ADDRESS_NAME");

                    b.Property<string>("Svlan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SVLAN");

                    b.Property<string>("Tcont")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TCONT");

                    b.Property<string>("UplinkRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UPLINK_RATE");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_RESOURCE", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaStaff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("StaffCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STAFF_CODE");

                    b.Property<string>("StaffEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("STAFF_EMAIL");

                    b.Property<string>("StaffEndDayWorking")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STAFF_END_DAY_WORKING");

                    b.Property<string>("StaffFirstDayWorking")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STAFF_FIRST_DAY_WORKING");

                    b.Property<string>("StaffLatitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STAFF_LATITUDE");

                    b.Property<string>("StaffLongitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STAFF_LONGITUDE");

                    b.Property<string>("StaffName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("STAFF_NAME");

                    b.Property<string>("StaffPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("STAFF_PHONE");

                    b.Property<string>("StaffProfilePictureFilename")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("STAFF_PROFILE_PICTURE_FILENAME");

                    b.Property<string>("StaffRole")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("STAFF_ROLE");

                    b.Property<long>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_STAFFS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaTeam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("COMPANY_ID");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("LocationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LOCATION_CODE");

                    b.Property<string>("ShipTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SHIP_TO");

                    b.Property<string>("StorageLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STORAGE_LOCATION");

                    b.Property<string>("TeamId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TEAM_ID");

                    b.Property<string>("TeamName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TEAM_NAME");

                    b.Property<string>("TeamService")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("TEAM_SERVICE");

                    b.Property<string>("VendorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VENDOR_CODE");

                    b.Property<long>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_TEAMS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaWfm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AUTHOR");

                    b.Property<string>("Created")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("Group")
                        .HasColumnType("int")
                        .HasColumnName("GROUP");

                    b.Property<string>("LastUpd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_UPD");

                    b.Property<DateTime?>("LastUpdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPD_DATE");

                    b.Property<string>("RemarkDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REMARK_DATE");

                    b.Property<string>("SubcontractRemarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SUBCONTRACT_REMARKS");

                    b.Property<long?>("WoId")
                        .HasColumnType("bigint")
                        .HasColumnName("WO_ID");

                    b.HasKey("Id");

                    b.HasIndex("WoId");

                    b.ToTable("FBB_TBL_WO_SOA_WFMS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvAuthorizationDetail", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvAuthorizationHeader", "Header")
                        .WithMany("FbbTblEvauthorizationDetails")
                        .HasForeignKey("HeaderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVAUTHORIZATION_DETAIL_FBB_TBL_EVAUTHORIZATION_HEADER");

                    b.Navigation("Header");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvCustomerInfoDetail", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvCustomerInfoHeader", "Header")
                        .WithMany("FbbTblEvcustomerinfoDetails")
                        .HasForeignKey("HeaderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVCUSTOMERINFO_DETAIL_FBB_TBL_EVCUSTOMERINFO_HEADER");

                    b.Navigation("Header");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvJobApproveDetail", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvJobApproveHeader", "Header")
                        .WithMany("FbbTblEvjobapproveDetails")
                        .HasForeignKey("HeaderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVJOBAPPROVE_DETAIL_FBB_TBL_EVJOBAPPROVE_HEADER");

                    b.Navigation("Header");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvJobIncompleteDetail", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvJobIncompleteHeader", "Header")
                        .WithMany("FbbTblEvjobincompleteDetails")
                        .HasForeignKey("HeaderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVJOBINCOMPLETE_DETAIL_FBB_TBL_EVJOBINCOMPLETE_HEADER");

                    b.Navigation("Header");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvMicrositeDetail", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvMicrositeHeader", "Header")
                        .WithMany("FbbTblEvmicrositeDetails")
                        .HasForeignKey("HeaderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVMICROSITE_DETAIL_FBB_TBL_EVMICROSITE_HEADER");

                    b.Navigation("Header");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvMicrositeUpdDetail", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvMicrositeUpdHeader", "Header")
                        .WithMany("FbbTblEvmicrositeupdDetails")
                        .HasForeignKey("HeaderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVMICROSITEUPD_DETAIL_FBB_TBL_EVMICROSITEUPD_HEADER");

                    b.Navigation("Header");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentCompany", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", "Order")
                        .WithMany("FbbTblEvnotifyappointmentCompanies")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVNOTIFYAPPOINTMENT_COMPANIES_FBB_TBL_EVNOTIFYAPPOINTMENT_ORDER");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentCrm", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", "Order")
                        .WithMany("FbbTblEvnotifyappointmentCrms")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVNOTIFYAPPOINTMENT_CRMS_FBB_TBL_EVNOTIFYAPPOINTMENT_ORDER");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentFee", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", "Order")
                        .WithMany("FbbTblEvnotifyappointmentFees")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVNOTIFYAPPOINTMENT_FEES_FBB_TBL_EVNOTIFYAPPOINTMENT_ORDER");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOntop", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", "Order")
                        .WithMany("FbbTblEvnotifyappointmentOntops")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVNOTIFYAPPOINTMENT_ONTOPS_FBB_TBL_EVNOTIFYAPPOINTMENT_ORDER");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentHeader", "Header")
                        .WithMany("FbbTblEvnotifyappointmentOrders")
                        .HasForeignKey("HeaderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVNOTIFYAPPOINTMENT_ORDER_FBB_TBL_EVNOTIFYAPPOINTMENT_HEADER");

                    b.Navigation("Header");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentResource", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", "Order")
                        .WithMany("FbbTblEvnotifyappointmentResources")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVNOTIFYAPPOINTMENT_RESOURCE_FBB_TBL_EVNOTIFYAPPOINTMENT_ORDER");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentStaff", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", "Order")
                        .WithMany("FbbTblEvnotifyappointmentStaffs")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVNOTIFYAPPOINTMENT_STAFFS_FBB_TBL_EVNOTIFYAPPOINTMENT_ORDER");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentTeam", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", "Order")
                        .WithMany("FbbTblEvnotifyappointmentTeams")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVNOTIFYAPPOINTMENT_TEAMS_FBB_TBL_EVNOTIFYAPPOINTMENT_ORDER");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentWfm", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", "Order")
                        .WithMany("FbbTblEvnotifyappointmentWfms")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVNOTIFYAPPOINTMENT_WFMS_FBB_TBL_EVNOTIFYAPPOINTMENT_ORDER");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvSendChecklateDetail", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblEvSendChecklateHeader", "Header")
                        .WithMany("FbbTblEvsendchecklateDetails")
                        .HasForeignKey("HeaderId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_EVSENDCHECKLATE_DETAIL_FBB_TBL_EVSENDCHECKLATE_HEADER");

                    b.Navigation("Header");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblMappingExternal", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblMappingWo", "MappingWoNavigation")
                        .WithMany("FbbTblMappingExternals")
                        .HasForeignKey("MappingWo")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_MAPPING_EXTERNAL_FBB_TBL_MAPPING_WO");

                    b.Navigation("MappingWoNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblMappingParameter", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblMappingWo", "MappingWoNavigation")
                        .WithMany("FbbTblMappingParameters")
                        .HasForeignKey("MappingWo")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_MAPPING_PARAMETER_FBB_TBL_MAPPING_WO");

                    b.Navigation("MappingWoNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblMappingValidate", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblMappingId", "Mapping")
                        .WithMany("FbbTblMappingValidates")
                        .HasForeignKey("MappingId")
                        .HasConstraintName("FK_FBB_TBL_MAPPING_VALIDATE_FBB_TBL_MAPPING_ID");

                    b.Navigation("Mapping");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoAttribute", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoAttributes")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_ATTRIBUTE_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoBlame", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoBlames")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_BLAME_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoErrorMessage", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoErrorMessages")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_ERROR_MESSAGE_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaCompany", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaCompanies")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_COMPANIES_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaCrm", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaCrms")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_CRMS_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaFee", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaFees")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_FEES_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaHeader", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaHeaders")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_HEADER_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaInstallOrder", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaInstallOrders")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_INSTALL_ORDER_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaMaOrder", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaMaOrders")
                        .HasForeignKey("WoId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_MA_ORDER_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaOntop", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaOntops")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_ONTOPS_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaResource", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaResources")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_RESOURCE_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaStaff", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaStaffs")
                        .HasForeignKey("WoId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_STAFFS_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaTeam", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaTeams")
                        .HasForeignKey("WoId")
                        .IsRequired()
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_TEAMS_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWoSoaWfm", b =>
                {
                    b.HasOne("Domain.Entities.Minieai.FbbTblWo", "Wo")
                        .WithMany("FbbTblWoSoaWfms")
                        .HasForeignKey("WoId")
                        .HasConstraintName("FK_FBB_TBL_WO_SOA_WFMS_FBB_TBL_WO");

                    b.Navigation("Wo");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvAuthorizationHeader", b =>
                {
                    b.Navigation("FbbTblEvauthorizationDetails");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvCustomerInfoHeader", b =>
                {
                    b.Navigation("FbbTblEvcustomerinfoDetails");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvJobApproveHeader", b =>
                {
                    b.Navigation("FbbTblEvjobapproveDetails");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvJobIncompleteHeader", b =>
                {
                    b.Navigation("FbbTblEvjobincompleteDetails");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvMicrositeHeader", b =>
                {
                    b.Navigation("FbbTblEvmicrositeDetails");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvMicrositeUpdHeader", b =>
                {
                    b.Navigation("FbbTblEvmicrositeupdDetails");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentHeader", b =>
                {
                    b.Navigation("FbbTblEvnotifyappointmentOrders");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvNotifyAppointmentOrder", b =>
                {
                    b.Navigation("FbbTblEvnotifyappointmentCompanies");

                    b.Navigation("FbbTblEvnotifyappointmentCrms");

                    b.Navigation("FbbTblEvnotifyappointmentFees");

                    b.Navigation("FbbTblEvnotifyappointmentOntops");

                    b.Navigation("FbbTblEvnotifyappointmentResources");

                    b.Navigation("FbbTblEvnotifyappointmentStaffs");

                    b.Navigation("FbbTblEvnotifyappointmentTeams");

                    b.Navigation("FbbTblEvnotifyappointmentWfms");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblEvSendChecklateHeader", b =>
                {
                    b.Navigation("FbbTblEvsendchecklateDetails");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblMappingId", b =>
                {
                    b.Navigation("FbbTblMappingValidates");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblMappingWo", b =>
                {
                    b.Navigation("FbbTblMappingExternals");

                    b.Navigation("FbbTblMappingParameters");
                });

            modelBuilder.Entity("Domain.Entities.Minieai.FbbTblWo", b =>
                {
                    b.Navigation("FbbTblWoAttributes");

                    b.Navigation("FbbTblWoBlames");

                    b.Navigation("FbbTblWoErrorMessages");

                    b.Navigation("FbbTblWoSoaCompanies");

                    b.Navigation("FbbTblWoSoaCrms");

                    b.Navigation("FbbTblWoSoaFees");

                    b.Navigation("FbbTblWoSoaHeaders");

                    b.Navigation("FbbTblWoSoaInstallOrders");

                    b.Navigation("FbbTblWoSoaMaOrders");

                    b.Navigation("FbbTblWoSoaOntops");

                    b.Navigation("FbbTblWoSoaResources");

                    b.Navigation("FbbTblWoSoaStaffs");

                    b.Navigation("FbbTblWoSoaTeams");

                    b.Navigation("FbbTblWoSoaWfms");
                });
#pragma warning restore 612, 618
        }
    }
}
