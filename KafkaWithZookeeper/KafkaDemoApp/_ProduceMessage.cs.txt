using Bogus;
using Confluent.Kafka;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace KafkaProducer;

public class ProduceMessage
{
    public async Task CreateMessage()
    {
        Console.WriteLine("producer begin.");
        var faker = new Faker("en");
        var config = new ProducerConfig
        {
            BootstrapServers = "127.0.0.1:9092",
            ClientId = "my-app",
            BrokerAddressFamily = BrokerAddressFamily.V4,
        };

        using var producer = new ProducerBuilder<Null, string>(config).Build();

        ConsoleKeyInfo cki;
        Console.TreatControlCAsInput = true;
        do
        {
            cki = Console.ReadKey();
            if (cki.Key == ConsoleKey.Enter)
            {
                var words = string.Join(' ', faker.Lorem.Words(5));
                Console.WriteLine($"Message is: {words}");
                var message = new Message<Null, string>
                {
                    Value = words
                };
                var deliveryReport = await producer.ProduceAsync("my-topic", message);
                Console.WriteLine($"Message delivered to {deliveryReport.TopicPartitionOffset}");
            }
        } while (cki.Key != ConsoleKey.Escape);

        Console.WriteLine("producer shutdown.");
    }
}


// See https://aka.ms/new-console-template for more information
using KafkaProducer;
ProduceMessage produceMessage = new ProduceMessage();
produceMessage.CreateMessage().Wait();
